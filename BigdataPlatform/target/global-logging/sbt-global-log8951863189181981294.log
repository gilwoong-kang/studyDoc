[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""/private/var/folders/p_/mc0g3xxn5g92vvdmm9l6bgwc0000gn/T/idea2.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""/private/var/folders/p_/mc0g3xxn5g92vvdmm9l6bgwc0000gn/T/idea2.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.2 (Oracle Corporation Java 1.8.0_201)
[debug]       Load.loadUnit: plugins took 167.260114ms
[debug]       Load.loadUnit: defsScala took 0.291418ms
[debug] [Loading] Scanning directory /Users/gilwoongkang/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/gilwoongkang/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 20.565797 ms
[debug]           Load.resolveProject(global-plugins) took 42.668736ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /Users/gilwoongkang/.sbt/1.0/plugins, plugins: List(<none>))) took 93.500004ms
[debug] [Loading] Done in /Users/gilwoongkang/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 113.777251ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.261304ms
[debug]     Load.loadUnit(file:/Users/gilwoongkang/.sbt/1.0/plugins/, ...) took 289.229311ms
[debug]   Load.apply: load took 733.233175ms
[debug]   Load.apply: resolveProjects took 5.829888ms
[debug]   Load.apply: finalTransforms took 51.309262ms
[debug]   Load.apply: config.delegates took 6.902913ms
[debug]   Load.apply: Def.make(settings)... took 342.976998ms
[debug]   Load.apply: structureIndex took 99.030881ms
[debug]   Load.apply: mkStreams took 1.504473ms
[info] loading global plugins from /Users/gilwoongkang/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2569.907529ms
[debug]                 Load.loadUnit: plugins took 15.160008ms
[debug]                 Load.loadUnit: defsScala took 0.00594ms
[debug] [Loading] Scanning directory /Users/gilwoongkang/School/BigdataPlatform/project/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/gilwoongkang/School/BigdataPlatform/project/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.719875 ms
[debug]                     Load.resolveProject(bigdataplatform-build-build) took 0.927603ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id bigdataplatform-build-build, base: /Users/gilwoongkang/School/BigdataPlatform/project/project, plugins: List(<none>))) took 3.10675ms
[debug] [Loading] Done in /Users/gilwoongkang/School/BigdataPlatform/project/project, returning: (bigdataplatform-build-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 4.721324ms
[debug]                 Load.loadUnit: cleanEvalClasses took 0.008056ms
[debug]               Load.loadUnit(file:/Users/gilwoongkang/School/BigdataPlatform/project/project/, ...) took 20.673031ms
[debug]             Load.apply: load took 22.066654ms
[debug]             Load.apply: resolveProjects took 0.124136ms
[debug]             Load.apply: finalTransforms took 8.812666ms
[debug]             Load.apply: config.delegates took 0.460931ms
[debug]             Load.apply: Def.make(settings)... took 75.400101ms
[debug]             Load.apply: structureIndex took 22.992105ms
[debug]             Load.apply: mkStreams took 0.002441ms
[info] loading project definition from /Users/gilwoongkang/School/BigdataPlatform/project/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]           Load.loadUnit: plugins took 303.217483ms
[debug]           Load.loadUnit: defsScala took 0.003176ms
[debug] [Loading] Scanning directory /Users/gilwoongkang/School/BigdataPlatform/project
[debug]             Load.loadUnit: mkEval took 11.949748ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/gilwoongkang/School/BigdataPlatform/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.771635 ms
[info] loading settings for project bigdataplatform-build from assembly.sbt,idea2.sbt ...
[debug]               Load.resolveProject(bigdataplatform-build) took 2.338806ms
[debug]             Load.loadTransitive: finalizeProject(Project(id bigdataplatform-build, base: /Users/gilwoongkang/School/BigdataPlatform/project, plugins: List(<none>))) took 4.605082ms
[debug] [Loading] Done in /Users/gilwoongkang/School/BigdataPlatform/project, returning: (bigdataplatform-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1907.096173ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.186487ms
[debug]         Load.loadUnit(file:/Users/gilwoongkang/School/BigdataPlatform/project/, ...) took 2214.290199ms
[debug]       Load.apply: load took 2215.352473ms
[debug]       Load.apply: resolveProjects took 0.111301ms
[debug]       Load.apply: finalTransforms took 7.334142ms
[debug]       Load.apply: config.delegates took 0.40765ms
[debug]       Load.apply: Def.make(settings)... took 45.447613ms
[debug]       Load.apply: structureIndex took 44.488615ms
[debug]       Load.apply: mkStreams took 0.002596ms
[info] loading project definition from /Users/gilwoongkang/School/BigdataPlatform/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4193.78348ms
[debug]     Load.loadUnit: defsScala took 0.002663ms
[debug] [Loading] Scanning directory /Users/gilwoongkang/School/BigdataPlatform
[debug]       Load.loadUnit: mkEval took 0.210522ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/gilwoongkang/School/BigdataPlatform, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.366784 ms
[info] loading settings for project bigdataplatform from build.sbt ...
[debug]         Load.resolveProject(bigdataplatform) took 24.950037ms
[debug]       Load.loadTransitive: finalizeProject(Project(id bigdataplatform, base: /Users/gilwoongkang/School/BigdataPlatform, plugins: List(<none>))) took 27.466643ms
[debug] [Loading] Done in /Users/gilwoongkang/School/BigdataPlatform, returning: (bigdataplatform)
[debug]     Load.loadUnit: loadedProjectsRaw took 1541.907294ms
[debug]     Load.loadUnit: cleanEvalClasses took 10.286948ms
[debug]   Load.loadUnit(file:/Users/gilwoongkang/School/BigdataPlatform/, ...) took 5746.491777ms
[debug] Load.apply: load took 5747.459614ms
[debug] Load.apply: resolveProjects took 0.087425ms
[debug] Load.apply: finalTransforms took 19.131668ms
[debug] Load.apply: config.delegates took 0.255449ms
[debug] Load.apply: Def.make(settings)... took 47.339625ms
[debug] Load.apply: structureIndex took 17.576379ms
[debug] Load.apply: mkStreams took 0.002258ms
[info] set current project to BigdataPlatform (in build file:/Users/gilwoongkang/School/BigdataPlatform/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49411 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49411, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to BigdataPlatform (in build file:/Users/gilwoongkang/School/BigdataPlatform/)
[debug] > Exec(idea-shell, None, None)

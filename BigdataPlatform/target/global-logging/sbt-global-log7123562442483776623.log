[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""/private/var/folders/p_/mc0g3xxn5g92vvdmm9l6bgwc0000gn/T/idea7.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""/private/var/folders/p_/mc0g3xxn5g92vvdmm9l6bgwc0000gn/T/idea7.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.2 (Oracle Corporation Java 1.8.0_201)
[debug]       Load.loadUnit: plugins took 185.199863ms
[debug]       Load.loadUnit: defsScala took 0.397465ms
[debug] [Loading] Scanning directory /Users/gilwoongkang/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/gilwoongkang/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 20.14607 ms
[debug]           Load.resolveProject(global-plugins) took 44.5437ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /Users/gilwoongkang/.sbt/1.0/plugins, plugins: List(<none>))) took 92.724331ms
[debug] [Loading] Done in /Users/gilwoongkang/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 113.172923ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.245207ms
[debug]     Load.loadUnit(file:/Users/gilwoongkang/.sbt/1.0/plugins/, ...) took 306.872375ms
[debug]   Load.apply: load took 585.962434ms
[debug]   Load.apply: resolveProjects took 7.033172ms
[debug]   Load.apply: finalTransforms took 56.610821ms
[debug]   Load.apply: config.delegates took 8.225494ms
[debug]   Load.apply: Def.make(settings)... took 376.576602ms
[debug]   Load.apply: structureIndex took 94.271464ms
[debug]   Load.apply: mkStreams took 1.507476ms
[info] loading global plugins from /Users/gilwoongkang/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2503.542777ms
[debug]                 Load.loadUnit: plugins took 17.792805ms
[debug]                 Load.loadUnit: defsScala took 0.004263ms
[debug] [Loading] Scanning directory /Users/gilwoongkang/School/BigdataPlatform/project/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/gilwoongkang/School/BigdataPlatform/project/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.80441 ms
[debug]                     Load.resolveProject(bigdataplatform-build-build) took 0.923694ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id bigdataplatform-build-build, base: /Users/gilwoongkang/School/BigdataPlatform/project/project, plugins: List(<none>))) took 3.246322ms
[debug] [Loading] Done in /Users/gilwoongkang/School/BigdataPlatform/project/project, returning: (bigdataplatform-build-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 4.889312ms
[debug]                 Load.loadUnit: cleanEvalClasses took 0.009496ms
[debug]               Load.loadUnit(file:/Users/gilwoongkang/School/BigdataPlatform/project/project/, ...) took 23.459905ms
[debug]             Load.apply: load took 24.998648ms
[debug]             Load.apply: resolveProjects took 0.154645ms
[debug]             Load.apply: finalTransforms took 8.111039ms
[debug]             Load.apply: config.delegates took 0.355534ms
[debug]             Load.apply: Def.make(settings)... took 82.130873ms
[debug]             Load.apply: structureIndex took 21.328288ms
[debug]             Load.apply: mkStreams took 0.002846ms
[info] loading project definition from /Users/gilwoongkang/School/BigdataPlatform/project/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]           Load.loadUnit: plugins took 318.298061ms
[debug]           Load.loadUnit: defsScala took 0.003417ms
[debug] [Loading] Scanning directory /Users/gilwoongkang/School/BigdataPlatform/project
[debug]             Load.loadUnit: mkEval took 10.21571ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/gilwoongkang/School/BigdataPlatform/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.283044 ms
[info] loading settings for project bigdataplatform-build from assembly.sbt,idea7.sbt ...
[debug]               Load.resolveProject(bigdataplatform-build) took 3.478218ms
[debug]             Load.loadTransitive: finalizeProject(Project(id bigdataplatform-build, base: /Users/gilwoongkang/School/BigdataPlatform/project, plugins: List(<none>))) took 6.36048ms
[debug] [Loading] Done in /Users/gilwoongkang/School/BigdataPlatform/project, returning: (bigdataplatform-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1935.996131ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.719439ms
[debug]         Load.loadUnit(file:/Users/gilwoongkang/School/BigdataPlatform/project/, ...) took 2258.756971ms
[debug]       Load.apply: load took 2259.800679ms
[debug]       Load.apply: resolveProjects took 0.120461ms
[debug]       Load.apply: finalTransforms took 7.661154ms
[debug]       Load.apply: config.delegates took 0.355041ms
[debug]       Load.apply: Def.make(settings)... took 67.451561ms
[debug]       Load.apply: structureIndex took 19.225092ms
[debug]       Load.apply: mkStreams took 0.002516ms
[info] loading project definition from /Users/gilwoongkang/School/BigdataPlatform/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4234.012157ms
[debug]     Load.loadUnit: defsScala took 0.003194ms
[debug] [Loading] Scanning directory /Users/gilwoongkang/School/BigdataPlatform
[debug]       Load.loadUnit: mkEval took 0.228631ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/gilwoongkang/School/BigdataPlatform, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.740092 ms
[info] loading settings for project bigdataplatform from build.sbt ...
[debug]         Load.resolveProject(bigdataplatform) took 22.240496ms
[debug]       Load.loadTransitive: finalizeProject(Project(id bigdataplatform, base: /Users/gilwoongkang/School/BigdataPlatform, plugins: List(<none>))) took 24.977764ms
[debug] [Loading] Done in /Users/gilwoongkang/School/BigdataPlatform, returning: (bigdataplatform)
[debug]     Load.loadUnit: loadedProjectsRaw took 1602.270322ms
[debug]     Load.loadUnit: cleanEvalClasses took 9.914302ms
[debug]   Load.loadUnit(file:/Users/gilwoongkang/School/BigdataPlatform/, ...) took 5846.804346ms
[debug] Load.apply: load took 5848.000037ms
[debug] Load.apply: resolveProjects took 0.123622ms
[debug] Load.apply: finalTransforms took 22.039783ms
[debug] Load.apply: config.delegates took 0.376638ms
[debug] Load.apply: Def.make(settings)... took 49.569105ms
[debug] Load.apply: structureIndex took 18.661799ms
[debug] Load.apply: mkStreams took 0.002767ms
[info] set current project to BigdataPlatform (in build file:/Users/gilwoongkang/School/BigdataPlatform/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49411 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49411, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to BigdataPlatform (in build file:/Users/gilwoongkang/School/BigdataPlatform/)
[debug] > Exec(idea-shell, None, None)
